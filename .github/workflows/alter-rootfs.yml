name: Alter RootFS

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'
        type: choice
        options:
        - "true"
        - "false"
      version:
        description: 'OpenWrt version'
        required: true
        default: 'snapshot'
        type: string

env:
  TZ: Asia/Shanghai
  DEVICE_NAME: unknown
  FILE_DATE: unknown
  FIRMWARE: unknown

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create ubinize config
      run: |
        sudo cat <<EOF > ubinize.cfg
        [rootfs-volume]
        mode=ubi
        image=img-1750711236_vol-rootfs.ubifs
        vol_id=0
        vol_name=rootfs
        vol_type=dynamic
        vol_alignment=1
        vol_flags=autoresize
        
        [rootfs-data-volume]
        mode=ubi
        vol_id=1
        vol_name=rootfs_data
        vol_type=dynamic
        vol_flags=autoresize
        vol_alignment=1
        
        EOF

    - name: Display the config file
      run: cat ubinize.cfg
        
    - name: Install ubi_reader
      run: |
        #sudo apt-get update
        sudo apt-get install -y mtd-utils
        sudo apt-get install linux-modules-extra-$(uname -r)
        sudo apt-get install squashfs-tools
        sudo apt-get install -y python3 python3-pip liblzo2-dev
        pip3 install ubi_reader
        #pip install binwalk
        
    - name: Download image from Git assets URL
      run: |
        IMAGE_URL="https://downloads.openwrt.org/releases/24.10.2/targets/qualcommax/ipq807x/openwrt-24.10.2-qualcommax-ipq807x-linksys_mx4200v1-squashfs-factory.bin"
        OUTPUT_FILENAME="downloaded_fw.img"
        curl -L -o "$OUTPUT_FILENAME" "$IMAGE_URL"
      shell: bash

    - name: Extract a part of the image using dd
      run: |
          dd if=downloaded_fw.img of=rootfs.ubi bs=512 skip=12288
          ls -lh rootfs.ubi
          ls -ld /mnt
          which ubireader_extract_files
          pwd
          #xxd rootfs.ubi |grep UBI
          ubireader_display_info rootfs.ubi
          ubireader_extract_images rootfs.ubi
          ls -la ./caldata.bin
          #xxd img-1750711236_vol-rootfs.ubifs |head
          sudo mkdir /mnt/mx4200_rootfs
          sudo chmod 777 /mnt/mx4200_rootfs
          sudo cp ./ubifs-root/rootfs.ubi/img-1750711236_vol-rootfs_data.ubifs /mnt/mx4200_rootfs/
          sudo cp ./ubifs-root/rootfs.ubi/img-1750711236_vol-rootfs.ubifs /mnt/mx4200_rootfs/
          sudo cp ./caldata.bin /mnt/mx4200_rootfs/
          sudo cp ./ubinize.cfg /mnt/mx4200_rootfs/
          cd /mnt/mx4200_rootfs
          sudo unsquashfs -s img-1750711236_vol-rootfs.ubifs
          sudo unsquashfs img-1750711236_vol-rootfs.ubifs
          #cd squashfs-root
          sudo ls -latR squashfs-root/lib/firmware/ath11k/IPQ8074/
          sudo mv squashfs-root/lib/firmware/ath11k/IPQ8074/hw2.0/board-2.bin squashfs-root/lib/firmware/ath11k/IPQ8074/hw2.0/_IGNORE_board-2.bin
          sudo ls -latR squashfs-root/lib/firmware/ath11k/IPQ8074/
          sleep 10
          sudo cp /mnt/mx4200_rootfs/caldata.bin squashfs-root/lib/firmware/ath11k/IPQ8074/hw2.0/board.bin
          sudo mksquashfs squashfs-root new_image.squashfs -comp xz -b 262144 -no-xattrs -exports
          sudo cp new_image.squashfs img-1750711236_vol-rootfs.ubifs
          sudo ubinize -o final_firmware.ubi -p 131072 -m 2048 ubinize.cfg
          sudo ubireader_display_info final_firmware.ubi
          #sudo cp new_image.squashfs /mnt/mx4200_rootfs

      continue-on-error: true


    - name: Upload the extracted file as an artifact
      uses: actions/upload-artifact@v4
      with:
          name: updated-rootfs-ubi
          path: /mnt/mx4200_rootfs/final_firmware.ubi
